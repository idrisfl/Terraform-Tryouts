# This is a basic workflow to help you get started with Actions

name: Create VM with Terraform

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: 
      - master
      - feature/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
#    env:
#      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
#      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
#      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    defaults:
      run:
        working-directory: ./terraform-azure-vm-linux
        
   # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          # The API token for a Terraform Cloud/Enterprise instance to place within the credentials block of the Terraform CLI configuration file.
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          
      # Azure Login with Service Principal
      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Terraform Init
        id: init
        run: terraform init
        
      - name: Terraform Plan
        id: validate
        run: terraform plan -out  "azure-vm-linux.tfplan"
        
      - name: Terraform Apply
        id: apply
        run: terraform apply "azure-vm-linux.tfplan"
        
      
        
        


      

          
      
          
        
  
